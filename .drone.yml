kind: pipeline
name: ci

steps:

- name: nats
  detach: true
  image: nats-streaming:0.20.0-alpine3.12

- name: pg
  image: postgres:13.1-alpine
  detach: true
  environment:
    POSTGRES_USER: mqbridge
    POSTGRES_PASSWORD: secret
    POSTGRES_DB: mqbridge_test

- name: fetch tags
  image: alpine/git
  commands:
  - git fetch --tags
  - git describe --tags --always > .version

- name: test app
  image: golang:1.15.5-alpine3.12
  commands:
  - export TEST_DSN_PG=postgres://mqbridge:secret@pg:5432/mqbridge_test?sslmode=disable
  - export TEST_DSN_NATS=nats://nats:4222
  - go test -tags test -covermode=atomic -coverprofile=coverage.out ./...
  - go vet ./...
  - apk add --no-cache curl bash git
  - curl -sS https://codecov.io/bash | bash
  - curl -sSL https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter format-coverage coverage.out -t gocov -p $${DRONE_REPO_LINK#https://}
  - ./cc-test-reporter upload-coverage
  environment:
    CGO_ENABLED: 0
    CODECOV_TOKEN:
      from_secret: my-codecov-token
    CC_TEST_REPORTER_ID:
      from_secret: my-codeclimate-token

- name: test docker build
  image: plugins/docker
  settings:
    repo: testbuild
    dry_run: true
    build_args:
      - GOLANG_VERSION=1.15.5-alpine3.12
  when:
    event:
      exclude:
      - tag

- name: publish docker
  image: plugins/docker
  settings:
    repo: ghcr.io/lekovr/${DRONE_REPO_NAME}
    registry: https://ghcr.io
    username: ${DRONE_REPO_OWNER}
    password:
      from_secret: my-docker-token
    auto_tag: true
    custom_labels: org.opencontainers.image.source=${DRONE_REPO_LINK}
    label_schema: description="Translate messages from one message queue system to another one"
    build_args:
      - GOLANG_VERSION=1.15.5-alpine3.12
  when:
    event:
    - tag
